{"version":3,"sources":["features/toDoCard/components/ToDoCard/ToDoCard.tsx","app/components/CustomTextInput/CustomTextInput.tsx","../node_modules/@babel/runtime/helpers/esm/extends.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","features/toDoCard/components/ToDoItem/getDescriptionOnChange.ts","features/toDoCard/components/ToDoItem/getDeleteOnClick.ts","features/toDoCard/components/ToDoItem/getIsCompleteOnChange.ts","features/toDoCard/selectors/activeProfileSelector.ts","app/components/CardFooterWrapper/CardFooterWrapper.tsx","app/components/CardFooterWrapper/CardFooterWrapper.module.css","features/toDoCard/components/ToDoItem/ToDoItem.module.css","features/toDoCard/components/ToDoCard/getCreateOnClick.ts","features/toDoCard/components/ToDoCard/getErrorCloseOnClick.ts","features/toDoCard/selectors/errorMessageSelector.ts","app/components/CustomCheckbox/CustomCheckbox.tsx","features/toDoCard/components/ToDoItem/ToDoItem.tsx","app/components/CustomCheckbox/CustomCheckbox.module.css","features/toDoCard/selectors/toDoListSelector.ts","features/toDoCard/components/ToDoCard/ToDoCardFooter.tsx"],"names":["ToDoCard","reactConfig","toDoList","useSelector","toDoListSelector","activeProfile","activeProfileSelector","className","role","aria-label","title","name","map","toDo","key","toDoId","CustomTextInput","value","onChange","label","idPrefix","autoFocus","inputId","htmlFor","id","type","event","target","_extends","Object","assign","i","arguments","length","source","prototype","hasOwnProperty","call","apply","this","_objectWithoutPropertiesLoose","excluded","sourceKeys","keys","indexOf","getDescriptionOnChange","description","store","dispatch","updateToDo","getDeleteOnClick","deleteToDo","getIsCompleteOnChange","isComplete","state","profile","profileList","find","profileId","activeProfileId","CardFooterWrapper","children","styles","wrapper","module","exports","getCreateOnClick","createToDo","setErrorMessage","getErrorCloseOnClick","errorMessageSelector","errorMessage","CustomCheckbox","checked","checkbox","ToDoItem","emptyToDo","toDoItem","buttonWrapper","onClick","filter","ToDoCardFooter","classNames","disabled","variant","dismissible","onClose"],"mappings":"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","file":"static/js/2.5acb9720.chunk.js","sourcesContent":["import React from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { ToDoItem } from '../ToDoItem/ToDoItem';\nimport { toDoListSelector } from '../../selectors/toDoListSelector';\nimport { activeProfileSelector } from '../../selectors/activeProfileSelector';\nimport { ToDoCardFooter } from './ToDoCardFooter';\nimport { TopLevelComponent } from 'app/typeUtils';\n\ninterface ToDoCardProps {\n  reactConfig?: {\n    title?: string;\n  };\n}\n\nexport const ToDoCard: TopLevelComponent<ToDoCardProps> = ({ reactConfig }) => {\n  const toDoList = useSelector(toDoListSelector);\n  const activeProfile = useSelector(activeProfileSelector);\n  return (\n    <div className=\"card\" role=\"complementary\" aria-label=\"ToDo Card\">\n      <div className=\"card-header\">\n        <h5 className=\"card-title\">\n          {reactConfig?.title}{' '}\n          {activeProfile?.name && `for ${activeProfile?.name}`}\n        </h5>\n      </div>\n      <div className=\"card-body\">\n        <ul className=\"list-group\">\n          {toDoList.map((toDo) => (\n            <ToDoItem key={toDo.toDoId} toDo={toDo}></ToDoItem>\n          ))}\n        </ul>\n      </div>\n      <ToDoCardFooter></ToDoCardFooter>\n    </div>\n  );\n};\nexport default ToDoCard;\n","import React from 'react';\n\ninterface CustomTextInputProps {\n  onChange: (value: string) => void;\n  value?: string;\n  label: string;\n  idPrefix: string;\n  autoFocus?: boolean;\n}\n\nexport const CustomTextInput: React.FC<CustomTextInputProps> = ({\n  value,\n  onChange,\n  label,\n  idPrefix,\n  autoFocus,\n}) => {\n  const inputId = `${idPrefix}-input`;\n\n  return (\n    <div>\n      <label htmlFor={inputId}>{label}</label>\n      <input\n        id={inputId}\n        type=\"text\"\n        className=\"form-control\"\n        value={value}\n        onChange={(event): void => onChange(event.target.value)}\n        autoFocus={autoFocus}\n      />\n    </div>\n  );\n};\n","export default function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import { updateToDo } from '../../toDoSlice';\nimport { store } from 'app/store';\n\nexport const getDescriptionOnChange = (toDoId?: number) => (\n  description: string,\n): void => {\n  /* istanbul ignore next */\n  if (!toDoId) {\n    return;\n  }\n  store.dispatch(\n    updateToDo({\n      toDoId,\n      description,\n    }),\n  );\n};\n","import { deleteToDo } from '../../toDoSlice';\nimport { store } from 'app/store';\n\nexport const getDeleteOnClick = (toDoId?: number) => (): void => {\n  /* istanbul ignore next */\n  if (!toDoId) {\n    return;\n  }\n  store.dispatch(deleteToDo(toDoId));\n};\n","import { updateToDo } from '../../toDoSlice';\nimport { store } from 'app/store';\n\nexport const getIsCompleteOnChange = (toDoId?: number) => (\n  isComplete: boolean,\n): void => {\n  /* istanbul ignore next */\n  if (!toDoId) {\n    return;\n  }\n  store.dispatch(\n    updateToDo({\n      toDoId,\n      isComplete,\n    }),\n  );\n};\n","import { RootState } from 'app/rootReducer';\nimport { Profile } from 'features/profileCard/profileSlice';\n\nexport const activeProfileSelector = (state: RootState): Profile | undefined =>\n  state.profile.profileList.find(\n    (profile) => profile.profileId === state.profile.activeProfileId,\n  );\n","import React from 'react';\nimport styles from './CardFooterWrapper.module.css';\n\nexport const CardFooterWrapper: React.FC = ({ children }) => (\n  <div className={styles.wrapper}>{children}</div>\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"CardFooterWrapper_wrapper__1sA5G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"toDoItem\":\"ToDoItem_toDoItem__1I-c8\",\"buttonWrapper\":\"ToDoItem_buttonWrapper__1GahE\"};","import { store } from 'app/store';\nimport { createToDo, setErrorMessage } from '../../toDoSlice';\n\nexport const getCreateOnClick = (profileId?: number) => (): void => {\n  if (!profileId) {\n    store.dispatch(setErrorMessage('Must select a profile first.'));\n    return;\n  }\n  store.dispatch(createToDo(profileId));\n};\n","import { store } from 'app/store';\nimport { setErrorMessage } from '../../toDoSlice';\n\nexport const getErrorCloseOnClick = () => (): void => {\n  store.dispatch(setErrorMessage());\n};\n","import { RootState } from 'app/rootReducer';\n\nexport const errorMessageSelector = (state: RootState): string | undefined =>\n  state.toDo.errorMessage;\n","import React from 'react';\n\nimport styles from './CustomCheckbox.module.css';\n\ninterface CustomCheckboxProps {\n  onChange: (value: boolean) => void;\n  checked?: boolean;\n  label: string;\n  idPrefix: string;\n  autoFocus?: boolean;\n}\n\nexport const CustomCheckbox: React.FC<CustomCheckboxProps> = ({\n  checked,\n  onChange,\n  label,\n  idPrefix,\n  autoFocus,\n}) => {\n  const inputId = `${idPrefix}-input`;\n\n  return (\n    <div>\n      <label htmlFor={inputId}>{label}</label>\n      <input\n        id={inputId}\n        type=\"checkbox\"\n        className={`form-control ${styles.checkbox}`}\n        checked={checked}\n        onChange={(event): void => onChange(event.target.checked)}\n        autoFocus={autoFocus}\n      />\n    </div>\n  );\n};\n","import React from 'react';\nimport styles from './ToDoItem.module.css';\n\nimport { ToDo } from '../../toDoSlice';\nimport { CustomTextInput } from 'app/components/CustomTextInput/CustomTextInput';\nimport { emptyToDo } from '../../helpers/toDoTemplate';\nimport { getDescriptionOnChange } from './getDescriptionOnChange';\nimport { getDeleteOnClick } from './getDeleteOnClick';\nimport { getIsCompleteOnChange } from './getIsCompleteOnChange';\nimport { CustomCheckbox } from 'app/components/CustomCheckbox/CustomCheckbox';\n\ninterface ToDoProps {\n  toDo: ToDo;\n}\n\nexport const ToDoItem: React.FC<ToDoProps> = ({ toDo = emptyToDo }) => {\n  return (\n    <li className={'list-group-item ' + styles.toDoItem}>\n      <CustomCheckbox\n        idPrefix={`isComplete-${toDo.toDoId}`}\n        label={'Complete?'}\n        checked={toDo.isComplete}\n        onChange={getIsCompleteOnChange(toDo.toDoId)}\n      />\n      <CustomTextInput\n        idPrefix={`description-${toDo.toDoId}`}\n        label={'Description'}\n        value={toDo.description}\n        onChange={getDescriptionOnChange(toDo.toDoId)}\n      />\n      <div className={styles.buttonWrapper}>\n        <button\n          className=\"btn btn-danger\"\n          onClick={getDeleteOnClick(toDo.toDoId)}\n        >\n          Delete\n        </button>\n      </div>\n    </li>\n  );\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"CustomCheckbox_checkbox__3dmq1\"};","import { RootState } from 'app/rootReducer';\nimport { ToDo } from '../toDoSlice';\n\nexport const toDoListSelector = (state: RootState): ToDo[] =>\n  state.toDo.toDoList.filter(\n    (toDo) => toDo.profileId === state.profile.activeProfileId,\n  );\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Alert } from 'react-bootstrap';\nimport classNames from 'classnames';\n\nimport { CardFooterWrapper } from 'app/components/CardFooterWrapper/CardFooterWrapper';\nimport { getCreateOnClick } from './getCreateOnClick';\nimport { getErrorCloseOnClick } from './getErrorCloseOnClick';\nimport { activeProfileSelector } from '../../selectors/activeProfileSelector';\nimport { errorMessageSelector } from 'features/toDoCard/selectors/errorMessageSelector';\n\nexport const ToDoCardFooter: React.FC = () => {\n  const activeProfile = useSelector(activeProfileSelector);\n  const errorMessage = useSelector(errorMessageSelector);\n  return (\n    <div className=\"card-footer\">\n      <CardFooterWrapper>\n        <button\n          className={classNames('btn', 'btn-primary', {\n            disabled: !activeProfile?.profileId,\n          })}\n          onClick={getCreateOnClick(activeProfile?.profileId)}\n        >\n          Create New ToDo\n        </button>\n        {errorMessage && (\n          <Alert variant=\"warning\" dismissible onClose={getErrorCloseOnClick()}>\n            {errorMessage}\n          </Alert>\n        )}\n      </CardFooterWrapper>\n    </div>\n  );\n};\n"],"sourceRoot":""}