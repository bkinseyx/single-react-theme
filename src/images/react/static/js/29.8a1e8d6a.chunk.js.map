{"version":3,"sources":["features/profileCard/reducers/createProfileReducer.test.ts"],"names":["test","state","store","getState","profile","expect","profileList","toHaveLength","maxProfileId","toBe","dispatch","createProfile","newProfile","toMatchInlineSnapshot","toEqual","emptyProfile","profileId"],"mappings":"wJAIAA,KAAK,sBAAsB,WACzB,IAAIC,EAAQC,IAAMC,WAAWC,QAC7BC,OAAOJ,EAAMK,aAAaC,aAAa,GACvCF,OAAOJ,EAAMO,cAAcC,KAAK,GAEhCP,IAAMQ,SAASC,2BACfV,EAAQC,IAAMC,WAAWC,QACzBC,OAAOJ,EAAMK,aAAaC,aAAa,GACvCF,OAAOJ,EAAMO,cAAcC,KAAK,GAChC,IAAMG,EAAaX,EAAMK,YAAY,GACrCD,OAAOO,GAAYC,sBACjBD,EADF,iHAUAP,OAAOO,GAAYE,QAAnB,2BACKC,gBADL,IAEEC,UAAW","file":"static/js/29.8a1e8d6a.chunk.js","sourcesContent":["import { store } from 'app/store';\nimport { createProfile } from '../profileSlice';\nimport { emptyProfile } from '../helpers/profileTemplate';\n\ntest('createProfile test', () => {\n  let state = store.getState().profile;\n  expect(state.profileList).toHaveLength(2);\n  expect(state.maxProfileId).toBe(2);\n\n  store.dispatch(createProfile());\n  state = store.getState().profile;\n  expect(state.profileList).toHaveLength(3);\n  expect(state.maxProfileId).toBe(3);\n  const newProfile = state.profileList[2];\n  expect(newProfile).toMatchInlineSnapshot(\n    newProfile,\n    `\n    Object {\n      \"profileId\": 3,\n      \"profileType\": \"guest\",\n      \"showToDoList\": false,\n    }\n  `,\n  );\n  expect(newProfile).toEqual({\n    ...emptyProfile,\n    profileId: 3,\n  });\n});\n"],"sourceRoot":""}