{"version":3,"sources":["features/userCard/api/deleteUserApi.ts","features/userCard/api/getUserApi.ts","features/userCard/components/UserItem/getDeleteOnClick.ts","features/userCard/components/UserItem/getEditOnClick.ts","features/userCard/components/UserItem/UserItem.module.css","features/userCard/components/UserItem/UserItem.tsx","features/userCard/selectors/usersSelector.ts","features/userCard/components/UserListCard/getCreateOnClick.ts","features/userCard/components/UserListCard/UserListCard.module.css","features/userCard/components/UserListCard/UserListCard.tsx","app/utils/liferayUtils.ts","features/userCard/api/getUsersApi.ts","app/components/CardFooterWrapper/CardFooterWrapper.tsx","app/components/CardFooterWrapper/CardFooterWrapper.module.css"],"names":["deleteUserApi","user","a","store","dispatch","deleteUserBegin","promisifiedLiferayService","userId","deleteUserSuccess","getUsersApi","deleteUserFailure","getUserApi","getUserBegin","userDetails","getUserSuccess","getUserFailure","getDeleteOnClick","event","stopPropagation","getEditOnClick","module","exports","UserItem","emptyUser","className","styles","item","firstName","middleName","lastName","screenName","emailAddress","buttonsWrapper","onClick","usersSelector","state","users","getCreateOnClick","createUser","UserListCard","useEffect","userList","useSelector","role","aria-label","listGroup","map","key","api","data","expectedResultType","Promise","resolve","reject","window","Liferay","Service","result","Array","isArray","error","updateUserDummyData","oldPassword","newPassword1","newPassword2","passwordReset","reminderQueryQuestion","reminderQueryAnswer","facebookId","openId","languageId","timeZoneId","greeting","comments","prefixId","suffixId","birthdayMonth","birthdayDay","birthdayYear","smsSn","facebookSn","jabberSn","skypeSn","twitterSn","jobTitle","groupIds","organizationIds","roleIds","userGroupRoles","userGroupIds","createUserDummyData","autoPassword","password1","password2","autoScreenName","locale","male","sendEmail","serviceContext","getGroupId","ThemeDisplay","getScopeGroupId","getUsersBegin","fetch","headers","accept","pragma","referrer","referrerPolicy","body","encodeURIComponent","method","mode","credentials","then","response","json","console","log","groupId","getUsersSuccess","getUsersFailure","CardFooterWrapper","children","wrapper"],"mappings":"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","file":"static/js/8.825187b4.chunk.js","sourcesContent":["import {\n  User,\n  deleteUserBegin,\n  deleteUserSuccess,\n  deleteUserFailure,\n  deleteUser,\n} from '../userSlice';\nimport { store } from 'app/store';\nimport { promisifiedLiferayService } from 'app/utils/liferayUtils';\nimport { getUsersApi } from './getUsersApi';\n\nexport const deleteUserApi = (user: User) => async () => {\n  if (process.env.NODE_ENV === 'development') {\n    store.dispatch(deleteUser(user));\n    return;\n  }\n  try {\n    store.dispatch(deleteUserBegin());\n    await promisifiedLiferayService(\n      '/user/delete-user',\n      {\n        userId: user.userId,\n      },\n      'object'\n    );\n    store.dispatch(deleteUserSuccess());\n    getUsersApi();\n  } catch (error) {\n    store.dispatch(deleteUserFailure(error));\n  }\n};\n","import { store } from 'app/store';\nimport { promisifiedLiferayService } from 'app/utils/liferayUtils';\nimport {\n  getUserBegin,\n  getUserSuccess,\n  getUserFailure,\n  User,\n} from '../userSlice';\n\nexport const getUserApi = async (user: User) => {\n  if (process.env.NODE_ENV === 'development') {\n    store.dispatch(getUserSuccess(user));\n    return;\n  }\n  store.dispatch(getUserBegin());\n  try {\n    const userDetails = await promisifiedLiferayService(\n      '/user/get-user-by-id',\n      { userId: user.userId },\n      'object'\n    );\n    store.dispatch(getUserSuccess(userDetails as User));\n  } catch (error) {\n    store.dispatch(getUserFailure(error));\n  }\n};\n\n// promisifiedLiferayService(\n//   \"/role/get-roles\",\n//   { companyId: Liferay.ThemeDisplay.getCompanyId(), types: [1] },\n//   \"array\"\n// ),\n// promisifiedLiferayService(\n//   \"/role/get-user-roles\",\n//   { userId },\n//   \"array\"\n// )\n","import React from 'react';\nimport { store } from 'app/store';\nimport { User } from '../../userSlice';\nimport { deleteUserApi } from 'features/userCard/api/deleteUserApi';\n\nexport const getDeleteOnClick = (user: User) => (\n  event: React.MouseEvent\n): void => {\n  /* istanbul ignore next */\n  if (!user) {\n    return;\n  }\n  store.dispatch(deleteUserApi(user));\n  event.stopPropagation();\n};\n","import React from 'react';\nimport { User } from '../../userSlice';\nimport { getUserApi } from 'features/userCard/api/getUserApi';\n\nexport const getEditOnClick = (user?: User) => (\n  event: React.MouseEvent\n): void => {\n  /* istanbul ignore next */\n  if (!user) {\n    return;\n  }\n  getUserApi(user);\n  event.stopPropagation();\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"UserItem_item__2gGRR\",\"buttonsWrapper\":\"UserItem_buttonsWrapper__1e4zy\"};","import React from 'react';\n\nimport { User } from 'features/userCard/userSlice';\nimport { emptyUser } from 'features/userCard/helpers/userTemplate';\nimport { getDeleteOnClick } from './getDeleteOnClick';\nimport { getEditOnClick } from './getEditOnClick';\nimport styles from './UserItem.module.css';\n\ninterface UserProps {\n  user: User;\n}\n\nexport const UserItem: React.FC<UserProps> = ({ user = emptyUser }) => (\n  <li className={`list-group-item ${styles.item}`}>\n    <div>\n      Name: {user.firstName} {user.middleName} {user.lastName}\n    </div>\n    <div>Screen name: {user.screenName ?? '<none>'}</div>\n    <div>Email Address: {user.emailAddress ?? '<none>'}</div>\n    <div className={`flex-grow ${styles.buttonsWrapper}`}>\n      <button className=\"btn btn-primary\" onClick={getEditOnClick(user)}>\n        Edit\n      </button>\n      <button className=\"btn btn-danger\" onClick={getDeleteOnClick(user)}>\n        Delete\n      </button>\n    </div>\n  </li>\n);\n","import { RootState } from 'app/rootReducer';\nimport { UserState } from '../userSlice';\n\nexport const usersSelector = (state: RootState): UserState['users'] =>\n  state.user.users;\n","import { store } from 'app/store';\nimport { createUser } from '../../userSlice';\n\nexport const getCreateOnClick = () => (): void => {\n  store.dispatch(createUser());\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listGroup\":\"UserListCard_listGroup__q1V-7\"};","import React, { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { UserItem } from '../UserItem/UserItem';\nimport { usersSelector } from '../../selectors/usersSelector';\nimport { CardFooterWrapper } from 'app/components/CardFooterWrapper/CardFooterWrapper';\nimport { getCreateOnClick } from './getCreateOnClick';\nimport { getUsersApi } from 'features/userCard/api/getUsersApi';\nimport styles from './UserListCard.module.css';\n\nexport const UserListCard: React.FC = () => {\n  useEffect(() => {\n    getUsersApi();\n  }, []);\n\n  const userList = useSelector(usersSelector);\n\n  return (\n    <div className=\"card\" role=\"main\" aria-label=\"User Card\">\n      <div className=\"card-header\">\n        <h5 className=\"card-title\">Users</h5>\n      </div>\n      <div className=\"card-body\">\n        <ul className={`list-group ${styles.listGroup}`}>\n          {userList.map((user) => (\n            <UserItem key={user.userId} user={user}></UserItem>\n          ))}\n        </ul>\n      </div>\n      <div className=\"card-footer\">\n        <CardFooterWrapper>\n          <button className=\"btn btn-primary\" onClick={getCreateOnClick()}>\n            Create New User\n          </button>\n        </CardFooterWrapper>\n      </div>\n    </div>\n  );\n};\n","declare global {\n  interface Window {\n    Liferay: any;\n  }\n}\n\n// This abstracts out most of the error handling and makes invoking api calls\n// inside of redux actions very tight, composable with Promise.all and\n// amenable to modern async-await syntax inside of thunk actions\nexport const promisifiedLiferayService = (\n  api: string,\n  data: {},\n  expectedResultType: any\n) =>\n  new Promise((resolve, reject) => {\n    try {\n      window.Liferay.Service(api, data, (result: any) => {\n        if (typeof result === expectedResultType) {\n          resolve(result);\n        } else if (expectedResultType === 'array' && Array.isArray(result)) {\n          resolve(result);\n        } else if (typeof result === 'string') {\n          reject(result);\n        } else {\n          reject('Unexpected error.');\n        }\n      });\n    } catch (error) {\n      reject(error);\n    }\n  });\n\nexport const updateUserDummyData = {\n  oldPassword: '',\n  newPassword1: '',\n  newPassword2: '',\n  passwordReset: false,\n  reminderQueryQuestion: '',\n  reminderQueryAnswer: '',\n  screenName: 'not_null',\n  emailAddress: 'test@example.com',\n  facebookId: 0,\n  openId: '', // this is weird: only id field here that takes a string instead of an int\n  languageId: 0,\n  timeZoneId: 0,\n  greeting: '',\n  comments: '',\n  firstName: '',\n  middleName: '',\n  lastName: '',\n  prefixId: 0,\n  suffixId: 0,\n  birthdayMonth: 1,\n  birthdayDay: 1,\n  birthdayYear: 1970,\n  smsSn: '',\n  facebookSn: '',\n  jabberSn: '',\n  skypeSn: '',\n  twitterSn: '',\n  jobTitle: '',\n  groupIds: null,\n  organizationIds: [],\n  roleIds: [],\n  userGroupRoles: [],\n  userGroupIds: [],\n};\n\nexport const createUserDummyData = {\n  autoPassword: false,\n  password1: '', //\n  password2: '', //\n  autoScreenName: false,\n  screenName: '', //\n  emailAddress: '', //\n  facebookId: 0,\n  openId: '',\n  locale: 'en_US',\n  firstName: '', //\n  middleName: '', //\n  lastName: '', //\n  prefixId: 0,\n  suffixId: 0,\n  male: true,\n  birthdayMonth: 1,\n  birthdayDay: 1,\n  birthdayYear: 1970,\n  jobTitle: '',\n  groupIds: null,\n  organizationIds: null,\n  roleIds: null,\n  userGroupIds: null,\n  sendEmail: false,\n  serviceContext: {},\n};\n\nexport const getGroupId = () => window.Liferay.ThemeDisplay.getScopeGroupId();\n","import { store } from 'app/store';\nimport { promisifiedLiferayService, getGroupId } from 'app/utils/liferayUtils';\nimport {\n  getUsersBegin,\n  getUsersSuccess,\n  getUsersFailure,\n  User,\n} from '../userSlice';\n\nconst dummyUserData: User[] = [\n  {\n    userId: '1',\n    firstName: 'Ben',\n    middleName: '',\n    lastName: 'Kinsey',\n  },\n];\n\nexport const getUsersApi = async () => {\n  if (process.env.NODE_ENV === 'development') {\n    store.dispatch(getUsersSuccess(dummyUserData));\n    return;\n  }\n  try {\n    store.dispatch(getUsersBegin());\n\n    fetch('/api/jsonws/invoke', {\n      headers: {\n        accept: 'application/json, text/javascript, */*; q=0.01',\n        'accept-language': 'en-US,en;q=0.9',\n        'cache-control': 'no-cache',\n        'content-type': 'application/x-www-form-urlencoded; charset=UTF-8',\n        pragma: 'no-cache',\n        'sec-fetch-dest': 'empty',\n        'sec-fetch-mode': 'cors',\n        'sec-fetch-site': 'same-origin',\n        'x-requested-with': 'XMLHttpRequest',\n      },\n      referrer: 'http://localhost:8080/web/guest/user-admin',\n      referrerPolicy: 'no-referrer-when-downgrade',\n      body:\n        'cmd=' +\n        encodeURIComponent('/user/get-group-users\":{\"groupId\":\"20124\"}}') +\n        '&p_auth=Fs4bLSXH',\n      method: 'POST',\n      mode: 'cors',\n      credentials: 'include',\n    })\n      .then((response) => response.json())\n      .then(console.log);\n\n    const users = (await promisifiedLiferayService(\n      '/user/get-group-users',\n      {\n        groupId: getGroupId(),\n        // start: 1,\n        // end: 2\n      },\n      'array'\n    )) as User[];\n    store.dispatch(getUsersSuccess(users));\n  } catch (error) {\n    store.dispatch(getUsersFailure(error));\n  }\n};\n","import React from 'react';\nimport styles from './CardFooterWrapper.module.css';\n\nexport const CardFooterWrapper: React.FC = ({ children }) => (\n  <div className={styles.wrapper}>{children}</div>\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"CardFooterWrapper_wrapper__1sA5G\"};"],"sourceRoot":""}